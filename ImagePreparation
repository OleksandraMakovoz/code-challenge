#!/usr/bin/env groovy

def CURRENT_TIME = new Date().format('HH:mm:ss dd-MM-yyyy')

pipeline {
    agent { node { label "aws" } }
    options {
        timestamps()
        timeout(time: 180, unit: 'MINUTES')
    }
    environment {
        SLACK_WEBHOOK_DOMAIN = 'liberty-lending'
        SLACK_CHANNEL = 'automation-ll-ms-reachlife'
        registryTag = "${GIT_COMMIT.take(7)}"
        dockerImage = ''
        registryImage = "${AWS_REGISTRY}/mc-ll-automation"
        registry = "${AWS_REGISTRY}"
    }
    stages {
        stage('Build conteiner test') {
            steps {
                script {
                    timeout(time: 20, unit: 'MINUTES') {
                        echo 'Build test conteiners'
                            echo 'Build test'
                            dockerImage = docker.build registryImage + ":${registryTag}"
                    }
                }
            }
        }
        stage('Push to registry') {
            steps {
                script {
                    timeout(time: 20, unit: 'MINUTES') {
                        echo "Login to registry"
                        sh "aws ecr get-login-password --region 'us-east-1' | docker login --username AWS --password-stdin ${env.registry}"
                        echo "Push tag"
                        sh "docker push ${env.registryImage}:${env.registryTag}"
                        echo "Push latest"
                        sh "docker tag ${env.registryImage}:${env.registryTag} ${env.registryImage}:latest &&  docker push ${env.registryImage}:latest"

                    }
                }
            }
        }}
    post {
        success {
            echo 'success'
            script {
                echo 'Notify slack'
                slackSend channel: "${SLACK_CHANNEL}", color: 'good',
                        message: "Fresh docker image with testes is pulled :thumbsup: :beers: :heavy_check_mark: :rainbow:",
                        attachments: """[{
                                    "fallback": "Docker environment is up",
                                    "text": "Docker environment is up. Time:${CURRENT_TIME}",
                                    "color": "good",
                                    "actions": [
                                    {
                                        "type": "button",
                                        "name": "Show pipeline",
                                        "text": "Show pipeline",
                                        "url": "${env.BUILD_URL}",
                                        "style": "primary"
                                    }]
                                    }]""",
                        teamDomain: "${SLACK_WEBHOOK_DOMAIN}",
                        tokenCredentialId: 'SLACK_WEBHOOK_KEY'
            }
        }
        failure {
            echo 'failure'
            script {
                echo 'Notify slack only for master'
                slackSend channel: "${SLACK_CHANNEL}", color: 'danger',
                        message: "Tests image have a problem :boom: :sob: :sos:",
                        attachments: """[{
                                    "fallback": "Pipeline failed",
                                    "text": "Pipeline: ${env.BUILD_URL}- FAILED Time:${CURRENT_TIME}",
                                    "color": "danger",
                                    "actions": [
                                    {
                                        "type": "button",
                                        "name": "Show pipeline",
                                        "text": "Show pipeline",
                                        "url": "${env.BUILD_URL}",
                                        "style": "primary"
                                    }]
                                    }]""",
                        teamDomain: '${SLACK_WEBHOOK_DOMAIN}',
                        tokenCredentialId: 'SLACK_WEBHOOK_KEY'
            }
        }
    }
}